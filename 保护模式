保护二字，意义甚广
描述符中的段基址、段界限、段属性、特权级之间的转换，都是对段的一种保护
保护模式中，为了更好的“保护”段
使用GDT管理各个段的描述符，描述符记录了各个段的基址、属性、界限
讲GDT的界限、基址记录在GdtPtr中，使用命令lgdt将GdtPtr加载到gdtr寄存器中
进行跳转时，使用指向描述符的选择子，会在GDT中查询相应描述符，获得段的信息

还有一种局部描述符表LDT，与GDT基本相同
定义LDT与GDT相同，但是使用LDT必须在GDT中有一个描述符指向LDT描述符表
有一相应的选择子指向该描述符，使用 lldt 选择子 加载LDT到寄存器
之后使用LDT的选择子会在LDT描述符表中查询，使用GDT选择子会在GDT中查询
而决定选择子性质的，是选择子中的TI字段，如果为1则是LDT选择子

现在有了GDT、LDT描述符表，可以很好的进行段的跳转
但是为了更好的信息保护，不让低级程序访问高级程序，所以需要利用好保护模式下的特权级

进行段访问或跳转需要符合一定的权限规则，权限不够或权限太高都可能访问失败
具体的特权级规则不细说，只说大概原理

CPL是当前执行的程序或任务的特权级，储存在cs和ss的第0位和第1位
DPL表示段或者门的特权级，储存在段描述符或者门描述符的DPL字段中
RPL是通过段选择子的第0位和第1位表现出来的
只有三者都符合调用规定，才能进行跳转

如果不使用门调用
访问一致代码段时，可以低特权级访问高特权级，可以同级之间，但是转移到高特权级后，代码的特权级保持低级不变
访问非一致代码段，只能同级之间
访问数据段，可以可以高特权级访问低特权级，可以同级之间

为了实现特权级转移，jmp、call远远不够，此时需要门描述符或者TSS
所谓的门描述符，是一种特殊的数据结构，结构包含着需要跳转到的段的选择子，用宏Gate进行定义
然后需要定义门描述符对应的选择子，进行跳转时，调用门也有特权级规则，符合规则才能跳转成功

保护模式下，call一个调用门也是长调用，此时堆栈会发生变化
从低特权级到高特权级，指令call会根据目标代码段的DPL从TSS中选择应该切换到哪个堆栈段
从高特权级到低特权级，可通过人为压目标ss、目标esp、目标cs、目标eip入栈
然后使用指令retf，进行高到底的跳转

此时的call、retf类似于是不同特权级之间的jmp

TSS结构的定义加载与LDT类似，先定义TSS段，然后在GDT中定义相应描述符、选择子
使用命令 ltr 选择子 加载TSS，之后进行低到高的跳转会查询TSS进行切换堆栈
