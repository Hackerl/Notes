安卓逆向从apk文件开始
apk中包含图片视频等资料，最重要的是一个dex文件
这是由java所写，然后编译的可执行文件

逆向思路：
  分析：
      dex--->jar：使用dex2jar，解压后可以看到所有源代码，不过都是class类型
      class--->java：使用jad，将class文件转化为java文件
      //由于是反编译而来此时的java源代码可能有些丢失、有些杂乱，所以无法使用javac进行编译，不过可用于分析app各个功能的实现，找出可以注入代码破解的函数或类
      logcat：使用adb连接手机，查看app运行时的日志，结合java代码可析app运行流程
      //使用adb logcat -v time *:E | grep "app名"命令，可以输出指定app的日志

  注入：
  dex--->smail：使用apktool，可以解包apk，生成smail源代码
  //smail源代码不会出现丢失杂乱，如果需要注入代码，只能修改smail代码，然后编译
  smail--->apk：使用apktool，重新打包后，需要进行签名才可安装，使用zipsigner

  调试：
      已经修改完成，不一定运行无误，可能由于源代码设置了保护措施，或注入代码时的错误，使用adb logcat查看运行时日志，出现错误后，检查错误原因，修改代码

  smail语法：
      网上的smail语法教程相对较少，但是参照java代码，应该看懂十之八九，然后依葫芦画瓢
      一个小技巧，将一个dex转化为jar后，通过javassist动态修改类，javassist功能强大，可以查找class文件中的方法，替换方法体中的代码
      如果你想写一段代码，又不知道用smail该怎么写，可以通过javassist修改类后，从新加入jar中，使用dx.jar将jar转为dex
      打包成apk后，在通过apktool解包生成smail源代码，此时你就可以看到对应java代码的smail写法
